# 关于json的html数据 
参照新华网

http://www.xinhuanet.com/politics/2018-01/21/c_1122291303.htm

# html样式参考
https://www.azul.com/
https://d2c.io/

# 周芳网站
http://www.rjqygl.com/content/?337.html

# 用stylus的时候  如果用本地css文件 会警告并不会生效 最好都用styl文件格式 而不是css文件和styl文件混用

# 图标字体链接地址
http://fontawesome.dashgame.com/#getstart

# flex布局图文并茂版
  http://blog.csdn.net/magneto7/article/details/70854472
  flex子容器如果嵌套子元素 可以把子元素设置为display: flex
  例如ul（容器）元素嵌套li（li是ul的子元素），li又包含了a元素，把li设置为 display: flex
# vue父子组件之间通信
vue父子组件通信
复制代码
1.父组件传递数据给子组件

父组件数据如何传递给子组件呢？可以通过props属性来实现

父组件：

<parent>
    <child :child-msg="msg"></child>  //这里必须要用 - 代替驼峰
</parent>

data(){
    return {
        msg: [1,2,3]
    };
}

子组件通过props来接收数据: 

方式1：
props: ['childMsg']

方式2 :
props: {
    childMsg: Array //这样可以指定传入的类型，如果类型不对，会警告
}

方式3：
props: {
    childMsg: {
        type: Array,
        default: [0,0,0] //这样可以指定默认的值
    }
}

2.子组件与父组件通信 https://www.cnblogs.com/hai-cheng/p/8021982.html

  子组件:
  <template>
      <div @click="testClick"></div>
  </template>

  methods: {
      testClick() {
          this.$emit('test','123'); //主动触发test方法，'123'为向父组件传递的数据
      }
  }
  父组件:

  <div>
      <child @test="change" :msg="msg"></child>  //监听子组件触发的test事件,然后调用change方法
  </div>
  methods: {
      change(msg) {
          this.msg = msg;  // msg: 123
      }
  }
  3.非父子组件通信 见慕课笔记ele项目23页

  如果2个组件不是父子组件那么如何通信呢？这时可以通过eventHub来实现通信. 
  所谓eventHub就是创建一个事件中心，相当于中转站，可以用它来传递事件和接收事件.

  let Hub = new Vue(); //创建事件中心


  组件1触发：
  <div @click="eve"></div>
  methods: {
      eve() {
          Hub.$emit('change','hehe'); //Hub触发事件
      }
  }

  组件2接收:
  <div></div>
  created() {
      Hub.$on('change', () => { //Hub接收事件
          this.msg = 'hehe';
      });
  }

  // 备注：
  在根vue注册eventBus
  